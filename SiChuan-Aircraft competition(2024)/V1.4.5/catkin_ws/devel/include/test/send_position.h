// Generated by gencpp from file test/send_position.msg
// DO NOT EDIT!


#ifndef TEST_MESSAGE_SEND_POSITION_H
#define TEST_MESSAGE_SEND_POSITION_H

#include <ros/service_traits.h>


#include <test/send_positionRequest.h>
#include <test/send_positionResponse.h>


namespace test
{

struct send_position
{

typedef send_positionRequest Request;
typedef send_positionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct send_position
} // namespace test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test::send_position > {
  static const char* value()
  {
    return "cc153912f1453b708d221682bc23d9ac";
  }

  static const char* value(const ::test::send_position&) { return value(); }
};

template<>
struct DataType< ::test::send_position > {
  static const char* value()
  {
    return "test/send_position";
  }

  static const char* value(const ::test::send_position&) { return value(); }
};


// service_traits::MD5Sum< ::test::send_positionRequest> should match
// service_traits::MD5Sum< ::test::send_position >
template<>
struct MD5Sum< ::test::send_positionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::test::send_position >::value();
  }
  static const char* value(const ::test::send_positionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::send_positionRequest> should match
// service_traits::DataType< ::test::send_position >
template<>
struct DataType< ::test::send_positionRequest>
{
  static const char* value()
  {
    return DataType< ::test::send_position >::value();
  }
  static const char* value(const ::test::send_positionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test::send_positionResponse> should match
// service_traits::MD5Sum< ::test::send_position >
template<>
struct MD5Sum< ::test::send_positionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::test::send_position >::value();
  }
  static const char* value(const ::test::send_positionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::send_positionResponse> should match
// service_traits::DataType< ::test::send_position >
template<>
struct DataType< ::test::send_positionResponse>
{
  static const char* value()
  {
    return DataType< ::test::send_position >::value();
  }
  static const char* value(const ::test::send_positionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_MESSAGE_SEND_POSITION_H
